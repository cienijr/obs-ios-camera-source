name: multiplatform-build

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:

  macos:
    runs-on: macos-10.15

    steps:
      - uses: actions/checkout@v2
        with:
          submodules: true

      - name: Install dependencies
        run: |
          ./CI/install-dependencies-macos.sh

      - name: Build OBS
        run: |
          ./CI/install-build-obs-macos.sh

      - name: Build obs-ios-camera-source
        run: |
          ./CI/build-macos.sh

      - name: Install release signing certificates
        run: |
          echo TODO

      - name: Package obs-ios-camera-source
        env:
          RELEASE_MODE: false
          # CODE_SIGNING_IDENTITY: $(secrets.macOS.codeSigningIdentity)
          # INSTALLER_SIGNING_IDENTITY: $(secrets.macOS.installerSigningIdentity)
          # AC_USERNAME: $(secrets.macOS.notarization.username)
          # AC_PASSWORD: $(secrets.macOS.notarization.password)
          # AC_PROVIDER_SHORTNAME: $(secrets.macOS.notarization.providerShortName)
        run: |
          ./CI/package-macos.sh

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.3
        with:
          name: build-macos
          path: release

  windows:
    env:
      build_config: RelWithDebInfo
      QtBaseDir: ${{ github.workspace }}\QtDep
      QTDIR32: ${{ github.workspace }}\QtDep\5.10.1\msvc2017
      QTDIR64: ${{ github.workspace }}\QtDep\5.10.1\msvc2017_64
      DepsBasePath: ${{ github.workspace }}\obsdependencies
      DepsPath32: ${{ github.workspace }}\obsdependencies\win32
      DepsPath64: ${{ github.workspace }}\obsdependencies\win64
      vcpkgToolchain: c:/vcpkg/scripts/buildsystems/vcpkg.cmake
      OpenSSL32: 'c:/vcpkg/installed/x86-windows-static'
      OpenSSL64: 'c:/vcpkg/installed/x64-windows-static'
      OBSPath: ${{ github.workspace }}\obs-studio
      VCPKG_DEFAULT_TRIPLET_64: 'x64-windows-static'
      VCPKG_DEFAULT_TRIPLET_86: '86-windows-static'

    runs-on: windows-2019

    steps:
      - uses: actions/checkout@v2
        with:
          path: obs-ios-camera-source
          submodules: true

      - name: Install Qt
        run: |
          cd obs-ios-camera-source
          CI\install-qt-win.cmd

      - name: Restore cached iOS Camera Plugin Dependencies
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-obscam-vcpkg
          path: |
            c:\vcpkg\installed\

      - name: Install iOS Camera Plugin Dependencies
        run: |
          cd obs-ios-camera-source
          CI\install-ios-camera-dependencies.cmd

      - name: Restore cached OBS Studio dependencies
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-obsdeps
          path: |
            ${{ github.workspace }}\obsdependencies

      - name: Download OBS Studio dependencies
        run: |
          cd obs-ios-camera-source
          CI\download-obs-deps.cmd

      - name: Restore cached OBS Studio builds
        uses: actions/cache@v2
        with:
          key: ${{ runner.os }}-obsbuild
          path: |
            ${{ github.workspace }}\obs-studio

      - name: Checkout & CMake OBS Studio
        run: |
          cd obs-ios-camera-source
          CI\checkout-cmake-obs-windows.cmd

      - name: 'Add msbuild to PATH'
        uses: microsoft/setup-msbuild@v1.0.2


      - name: 'Build OBS Studio 32-bit'
        run: |
          msbuild /m /p:Configuration=RelWithDebInfo ${{ github.workspace }}\obs-studio\build32\obs-studio.sln

      - name: 'Build OBS Studio 64-bit'
        run: |
          msbuild /m /p:Configuration=RelWithDebInfo ${{ github.workspace }}\obs-studio\build64\obs-studio.sln



      - name: 'CMake obs-ios-camera-source'
        run: |
          cd obs-ios-camera-source
          CI\prepare-windows.cmd



      - name: 'Build obs-ios-camera-source 32-bit'
        run: |
          cd obs-ios-camera-source
          msbuild /m /p:Configuration=RelWithDebInfo .\build32\obs-ios-camera-source.sln

      - name: 'Build obs-ios-camera-source 64-bit'
        run: |
          cd obs-ios-camera-source
          msbuild /m /p:Configuration=RelWithDebInfo .\build64\obs-ios-camera-source.sln



      - name: 'Package obs-ios-camera-source'
        run: |
          cd obs-ios-camera-source
          CI\package-windows.cmd


      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v2.2.3
        with:
          name: build-windows
          path: ${{ github.workspace }}/obs-ios-camera-source


